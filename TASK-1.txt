import pandas as pd
import matplotlib.pyplot as plt
from prophet import Prophet
from sklearn.metrics import mean_absolute_error
import numpy as np

# Step 3: Load your sales data
# Sample data creation for demonstration; replace with your CSV
data = {
    'Date': pd.date_range(start='2022-01-01', periods=200, freq='D'),
    'Sales': np.random.poisson(lam=200, size=200) + np.linspace(0, 100, 200)
}
df = pd.DataFrame(data)

# OR load your own CSV file like this:
# df = pd.read_csv('sales_data.csv')

# Step 4: Prepare the data for Prophet
df.rename(columns={'Date': 'ds', 'Sales': 'y'}, inplace=True)

# Step 5: Split data into training and testing
train = df[:-30]
test = df[-30:]

# Step 6: Initialize and fit the Prophet model
model = Prophet(daily_seasonality=True)
model.fit(train)

# Step 7: Create future dataframe and forecast
future = model.make_future_dataframe(periods=30)
forecast = model.predict(future)

# Step 8: Plot the forecast
model.plot(forecast)
plt.title('Sales Forecast')
plt.xlabel('Date')
plt.ylabel('Sales')
plt.grid()
plt.show()

# Step 9: Plot forecast components (trend, seasonality)
model.plot_components(forecast)
plt.show()

# Step 10: Evaluate forecast accuracy
# Compare the last 30 days of actual vs predicted
y_true = test['y'].values
y_pred = forecast.iloc[-30:]['yhat'].values
mae = mean_absolute_error(y_true, y_pred)
print(f"\nMean Absolute Error (Last 30 days): {mae:.2f}")